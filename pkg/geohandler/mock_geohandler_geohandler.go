// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package geohandler is a generated GoMock package.
package geohandler

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGeoHandler is a mock of GeoHandler interface
type MockGeoHandler struct {
	ctrl     *gomock.Controller
	recorder *MockGeoHandlerMockRecorder
}

// MockGeoHandlerMockRecorder is the mock recorder for MockGeoHandler
type MockGeoHandlerMockRecorder struct {
	mock *MockGeoHandler
}

// NewMockGeoHandler creates a new mock instance
func NewMockGeoHandler(ctrl *gomock.Controller) *MockGeoHandler {
	mock := &MockGeoHandler{ctrl: ctrl}
	mock.recorder = &MockGeoHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGeoHandler) EXPECT() *MockGeoHandlerMockRecorder {
	return m.recorder
}

// FindCountry mocks base method
func (m *MockGeoHandler) FindCountry(address string) (string, error) {
	ret := m.ctrl.Call(m, "FindCountry", address)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindCountry indicates an expected call of FindCountry
func (mr *MockGeoHandlerMockRecorder) FindCountry(address interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindCountry", reflect.TypeOf((*MockGeoHandler)(nil).FindCountry), address)
}
