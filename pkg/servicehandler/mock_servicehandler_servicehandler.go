// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package servicehandler is a generated GoMock package.
package servicehandler

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockServiceHandler is a mock of ServiceHandler interface
type MockServiceHandler struct {
	ctrl     *gomock.Controller
	recorder *MockServiceHandlerMockRecorder
}

// MockServiceHandlerMockRecorder is the mock recorder for MockServiceHandler
type MockServiceHandlerMockRecorder struct {
	mock *MockServiceHandler
}

// NewMockServiceHandler creates a new mock instance
func NewMockServiceHandler(ctrl *gomock.Controller) *MockServiceHandler {
	mock := &MockServiceHandler{ctrl: ctrl}
	mock.recorder = &MockServiceHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceHandler) EXPECT() *MockServiceHandlerMockRecorder {
	return m.recorder
}

// GeoFind mocks base method
func (m *MockServiceHandler) GeoFind(address string, countries []string) (bool, error) {
	ret := m.ctrl.Call(m, "GeoFind", address, countries)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeoFind indicates an expected call of GeoFind
func (mr *MockServiceHandlerMockRecorder) GeoFind(address, countries interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeoFind", reflect.TypeOf((*MockServiceHandler)(nil).GeoFind), address, countries)
}
